using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ContainerLogistics.Classes
{
    public abstract class Container
    {
        /*
         * Mass (kg)
         * Height (cm)
         * Weight (kg)
         * Depth (cm)
         * Serial number
         *      - number format: KON-C-1
         *      - first part is always KON
         *      - second part is container type
         *      - third part is ID, generated by system
         * Maximum weight capacity (kg)
         */
        /*
         * Creating a container
         * Cargo unloading
         * Cargo loading with specified amount of product
         *      - if the product weight is greater than container capacity we should throw OverfillException
         * Printing info about container
         */
    }
}
/*
 * ADDITIONAL INFO
 * There are special containers that have a specified type of cargo they can hold:
 * Liquid container:
 *  - L type in serial number (e.g. KON-L-1)
 *  - Allow liquid transportation
 *      - two types of liquids: hazardous (e.g. fuel), normal (e.g. milk)
 *  - Implements interface IHazardNotifier which allows sending text notification in case of dangerous situation and includes container serial number
 *  - When running loading method we should check:
 *      - if the container's holding hazardous cargo, we can only fill 50% of total capacity
 *      - otherwise we can fill 90% of total capacity
 *      - push notification about dangerous user action if user tries to fill more than permitted by these rules
 * Gas container:
 *  - G type in serial number
 *  - Holds additional info about atmospheric pressure inside the container
 *  - While unloading this container 5% of its cargo is left inside
 *  - Implements interface IHazardNotifier which allows sending text notification in case of dangerous situation and includes container serial number
 *  - if cargo mass is greater than container capacity we should throw an exception
 * Refrigerated container:
 *  - C type in serial number
 *  - Holds additional info: 
 *      - cargo type that can be stored in the specified container
 *      - temperature inside the container
 *  - The container can only hold one type of cargo
 *  - Temperature inside the container cannot be lower than minimum storing temperature required by specified cargo type
 * 
 * Product/Temperature chart:
 *  Bananas: 13,3
 *  Chocolate: 18
 *  Fish: 2
 *  Meat: -15
 *  Ice cream: -18
 *  Frozen pizza: -30
 *  Cheese: 7,2
 *  Sausages: 5
 *  Butter: 20,5
 *  Eggs: 19
 *  
 * ADDITIONAL INFO 2
 * My structure implementation requires that I add also normal type containers (N type in serial number)
 *  - because it is my own class, not specified by the requirements, there are no rules besides the weight capacity
 */